[project]
name = "auth-service"
version = "0.1.0"
description = "Authentication and Authorization service for PAAuth"
authors = [
    {name = "daniel",email = "danielnwachukwu5738@gmail.com"}
]
readme = "README.md"
requires-python = ">=3.12,<4.0"
dependencies = [
  "fastapi>=0.101.0,<1.0.0",
  "uvicorn[standard]>=0.22.0,<1.0.0",
  "pydantic[email]>=2.5.0,<3.0.0",
  "pydantic-settings>=2.0.0,<3.0.0",
  "sqlalchemy>=2.0.0,<3.0.0",
  "psycopg[binary,pool]>=3.1.8,<4.0.0",
  "greenlet>=3.0.0,<4.0.0",
  "python-jose[cryptography]>=3.3.0,<4.0.0",
  "passlib[bcrypt]>=1.7.4,<2.0.0",
  "supabase[async]>=2.15.2,<3.0.0",
  "alembic>=1.8.0,<2.0.0",
  "slowapi>=0.1.4,<1.0.0",
  "python-dotenv (>=1.1.0,<2.0.0)",
]

[project.optional-dependencies]
dev = [
  # Dependencies moved to tool.poetry.group.dev.dependencies
]

[tool.poetry]
name = "auth-service" 
version = "0.1.0"     
description = "Authentication and Authorization service for PAAuth"
authors = ["daniel <danielnwachukwu5738@gmail.com>"] 
license = "MIT" 
readme = "README.md"
packages = [{include = "auth_service", from = "src"}]

[tool.poetry.dependencies]
python = ">=3.12,<4.0" # Python version constraint

# Main application dependencies
fastapi = ">=0.101.0,<1.0.0"
uvicorn = {extras = ["standard"], version = ">=0.22.0,<1.0.0"}
pydantic = {extras = ["email"], version = ">=2.5.0,<3.0.0"}
pydantic-settings = ">=2.0.0,<3.0.0"
sqlalchemy = ">=2.0.0,<3.0.0"
psycopg = {extras = ["binary", "pool"], version = ">=3.1.8,<4.0.0"}
greenlet = ">=3.0.0,<4.0.0" # Often a dependency of SQLAlchemy async features # For Alembic sync operations or if directly used
python-jose = {extras = ["cryptography"], version = ">=3.3.0,<4.0.0"}
passlib = {extras = ["bcrypt"], version = ">=1.7.4,<2.0.0"}
supabase = {extras = ["async"], version = ">=2.15.2,<3.0.0"}
alembic = ">=1.8.0,<2.0.0"
slowapi = ">=0.1.4,<1.0.0"
python-dotenv = ">=1.0.0,<2.0.0" # Moved from [project.dependencies]

[tool.poetry.group.dev.dependencies]
pytest = ">=8.0.0,<9.0.0"
pytest-cov = ">=4.0.0,<5.0.0"
black = ">=23.3.0,<24.0.0"
ruff = ">=0.0.278,<1.0.0"
mypy = ">=0.971,<1.0.0"
pre-commit = ">=3.0.0,<4.0.0"
httpx = ">=0.28.1,<1.0.0"
pytest-asyncio = ">=1.0.0,<2.0.0"
asgi-lifespan = "^2.1.0"

[tool.ruff.lint.isort]
force-single-line = true

# Remove pytest configuration from here as it's now in pytest.ini
# [tool.pytest.ini_options]
# asyncio_mode = "Mode.STRICT"
# asyncio_default_fixture_loop_scope = "function"

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"
