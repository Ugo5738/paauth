#
# Production Dockerfile for Super ID Service
#
# This multi-stage build creates a lean, secure image for production.
#

# Stage 1: Build the application and dependencies
FROM python:3.12-slim AS builder

ENV POETRY_NO_INTERACTION=1 \
    POETRY_VIRTUALENVS_CREATE=false \
    PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1

# Install poetry
RUN pip install poetry

WORKDIR /app

# Copy only files needed for dependency installation
COPY pyproject.toml poetry.lock* ./

# Install only production dependencies
RUN poetry install --no-root --only main --no-interaction

# Copy the application source code
COPY ./src/super_id_service ./src/super_id_service
COPY ./alembic.ini ./alembic.ini
COPY ./migrations ./migrations


# Stage 2: Create the final, lean production image
FROM python:3.12-slim AS final

ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PYTHONPATH=/app/src

WORKDIR /app

# Create a non-root user for security
RUN addgroup --system app && adduser --system --ingroup app app

# Copy the installed dependencies and application code from the builder stage
COPY --from=builder /app /app
COPY --from=builder /usr/local/bin/poetry /usr/local/bin/poetry

# Set ownership to the non-root user
RUN chown -R app:app /app

# Switch to the non-root user
USER app

EXPOSE 8000

# The command to run the application in production (no reload)
CMD ["poetry", "run", "uvicorn", "super_id_service.main:app", "--host", "0.0.0.0", "--port", "8000"]